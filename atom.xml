<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zcc&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zccblog.com/"/>
  <updated>2017-11-27T03:10:26.247Z</updated>
  <id>http://zccblog.com/</id>
  
  <author>
    <name>Zcc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于CSS的常用布局</title>
    <link href="http://zccblog.com/2017/10/30/about-layout/"/>
    <id>http://zccblog.com/2017/10/30/about-layout/</id>
    <published>2017-10-30T04:56:48.000Z</published>
    <updated>2017-11-27T03:10:26.247Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>放一篇以前关于双飞翼布局、圣杯布局总结吧，感觉博客太空了…（⊙＿⊙；）…</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>双飞翼布局和圣杯布局都是页面设计常用的布局</p><p>关于双飞翼布局和圣杯布局，先看两个布局的DOM文档</p><a id="more"></a><h4 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h4><p>双飞翼布局左右附注栏没有和内容包在同一个容器里，用双飞翼来形容确实很形象<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"middle"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>双飞翼<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p><p>接着来看css代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.middle</span>&#123;</div><div class="line">      <span class="attribute">float</span>: left;</div><div class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.middle</span> <span class="selector-class">.content</span>&#123;</div><div class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">210px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="number">#eee</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">500px</span></div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.left</span>&#123;</div><div class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">float</span>: left;</div><div class="line">      <span class="attribute">background-color</span>: coral;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="selector-class">.right</span>&#123;</div><div class="line">      <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">      <span class="attribute">float</span>: left;</div><div class="line">      <span class="attribute">background-color</span>: tomato;</div><div class="line">      <span class="attribute">margin-left</span>:-<span class="number">200px</span>;</div><div class="line"></div><div class="line">  &#125;</div></pre></td></tr></table></figure></p><p>效果如图</p><p><img src="/images/pictures/shuangfeiyi.PNG" alt="shuangfeiyi"></p><h4 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h4><p>而圣杯布局就是左右附注栏和内容同时包在同一个容器里<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"middle"</span>&gt;</span>圣杯<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p><p>接着来看css代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.container</span>&#123;</div><div class="line">        <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">210px</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.middle</span>&#123;</div><div class="line">        <span class="attribute">float</span>:left;</div><div class="line">        <span class="attribute">height</span>:<span class="number">500px</span>;</div><div class="line">        <span class="attribute">width</span>:<span class="number">100%</span>;</div><div class="line">        <span class="attribute">background-color</span>:<span class="number">#eee</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.left</span>&#123;</div><div class="line">        <span class="attribute">float</span>:left;</div><div class="line">        <span class="attribute">height</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">background-color</span>:coral;</div><div class="line">        <span class="attribute">margin-left</span>:-<span class="number">100%</span>;</div><div class="line">        <span class="attribute">position</span>:relative;</div><div class="line">        <span class="attribute">left</span>:-<span class="number">210px</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="selector-class">.right</span>&#123;</div><div class="line">        <span class="attribute">float</span>:left;</div><div class="line">        <span class="attribute">height</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">        <span class="attribute">background-color</span>:tomato;</div><div class="line">        <span class="attribute">margin-left</span>:-<span class="number">200px</span>;</div><div class="line">        <span class="attribute">position</span>:relative;</div><div class="line">        <span class="attribute">right</span>:-<span class="number">210px</span>;</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p><p>效果如图</p><p><img src="/images/pictures/shengbei.PNG" alt="shengbei"></p><ul><li>关于负margin</li></ul><p><code>margin-top/left</code>为负值不会增加高度, 只会产生向上位移/左移, <code>margin-bottom/right</code>为负数, 元素并不会向下/右移动, 而是将后续的元素拖拉进来, 覆盖本来的元素。<br>两个布局都用float脱离文档流，用负margin调整附注栏位置。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>css中的负边距(negative margin)是布局中的一个常用技巧，非常基础，只要运用得合理常常会有意想不到的效果。很多特殊的css布局方法都依赖于负边距，所以掌握它的用法对于前端的同学来说，那是必须的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;放一篇以前关于双飞翼布局、圣杯布局总结吧，感觉博客太空了…（⊙＿⊙；）…&lt;/p&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;p&gt;双飞翼布局和圣杯布局都是页面设计常用的布局&lt;/p&gt;
&lt;p&gt;关于双飞翼布局和圣杯布局，先看两个布局的DOM文档&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://zccblog.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="CSS" scheme="http://zccblog.com/tags/CSS/"/>
    
      <category term="布局" scheme="http://zccblog.com/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages + Hexo 搭建个人博客</title>
    <link href="http://zccblog.com/2016/05/28/firstblog/"/>
    <id>http://zccblog.com/2016/05/28/firstblog/</id>
    <published>2016-05-28T08:50:27.000Z</published>
    <updated>2017-11-22T08:39:23.439Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一开始，我以为必须购买一个独立域名才可以进行博客的搭建（╯︿╰﹀ ，所以在狗爹上<strong>斥巨资</strong>(╯▔︵▔)╯ 购买了域名，后来在搭建过程中发现可以单纯利用Github pages就可以搭建自己的独立博客了T_T唉…..不过有个独立域名也挺好的。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>这几天因为看网易公开课<a href="http://open.163.com/movie/2010/9/J/J/M7S6PN5ED_M7S94TUJJ.html" target="_blank" rel="external">构建动态网站</a>，萌生了自己搭建个独立博客的想法，搭建博客期间还是遇到了不少细节方面的问题，过程并没有想象中的那么简单。前辈们写的博客是个好东西，有不少的模板可以借鉴，但是呢还是遇到了一些坑，花了不少时间。搭建过程中发现自己和同为大学生的他们差距挺大的，还有不少要学，不过当看到自己的博客可以访问的时候心里还是挺激动的 \^o^/。<br><a id="more"></a></p><h3 id="总结一下如何搭建个人博客"><a href="#总结一下如何搭建个人博客" class="headerlink" title="总结一下如何搭建个人博客"></a>总结一下如何搭建个人博客</h3><h4 id="如果要使用使用额外独立域名"><a href="#如果要使用使用额外独立域名" class="headerlink" title="如果要使用使用额外独立域名"></a>如果要使用使用额外独立域名</h4><ul><li>去go daddy购买，支持支付宝，而且网上有不少优惠码</li><li>购买成功后，更改godaddy的nameservers为DNSpod的nameservers，将nameservers更改为F1G1NS1.DNSPOD.NET和F1G1NS2.DNSPOD.NET</li><li>将独立域名与github pages的空间绑定，使用NDSpod，注册DNSpod，添加域名，其中两条A记录指向github pages提供的ip：·192.30.252.153和 ·192.30.252.154</li></ul><h4 id="单纯利用Github-pages搭建自己的独立博客"><a href="#单纯利用Github-pages搭建自己的独立博客" class="headerlink" title="单纯利用Github pages搭建自己的独立博客"></a>单纯利用Github pages搭建自己的独立博客</h4><ol><li>在GitHub创建个人仓库，命名为username.github.io（username是你的账号名）</li><li>安装Node.js和Git，Git是一个版本控制工具，而GitHub是类似于远程仓库，用于存放Git管理的各种项目</li><li>与Github建立联系，检查电脑中是否已有SSH keys，生成SSH keys，在Github中添加SSH key</li><li>安装Hexo（安装之前，应该已经安装了Git和Node.js）</li><li>使用Hexo建站，选择一个文件夹（如：E：\Hexo），此文件夹即日后的本地博客仓库。右键Git Bash，输入hexo init，此指令完成后，接着输入npm install，安装依赖包。这样本地Hexo博客就搭建好了，可以执行以下命令<code>hexo generate</code>（编译）、<code>hexo server -p 5000</code>（本地访问 在端口5000），在浏览器输入localhost:5000查看雏形。（注：此处可以输入<code>hexo server</code>在localhost:4000查看即可，但是我不知道我的端口什么原因，所以我只能在p 5000上查看）</li><li><p>将博客部署到Github上，在站点文件夹下右键git bash输入 <code>vim _config.yml</code>进行修改:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">     <span class="built_in">type</span>: git</div><div class="line">     repo: https://github.com/username/username.github.io.git</div><div class="line">     branch: master</div></pre></td></tr></table></figure></li><li><p>为了能够使Hexo部署到Github上，需要安装一个插件，git bash输入<code>npm install hexo-deployer-git --save</code>，<br>然后再输入 <code>hexo g</code>（编译）、<code>hexo d</code>（提交到github）即可完成。在浏览器输入：username.github.io就可以进行浏览了，开心，吼吼</p></li><li>选择hexo主题，修改主题，我选择的是next主题，这个主题有很详细的<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">说明</a>，按照说明配置就行，这里说明一下，在配置侧边栏社交链接的图标是<a href="http://www.yeahzan.com/fa/facss.html" target="_blank" rel="external">font awesome</a>（第一次知道有这种东西存在 (⊙﹏⊙)b），不必带 fa-前缀</li></ol><p><em>独立博客搭建完成</em></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>有了自己的博客，希望也能坚持学下去</p><p>嗯</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;一开始，我以为必须购买一个独立域名才可以进行博客的搭建（╯︿╰﹀ ，所以在狗爹上&lt;strong&gt;斥巨资&lt;/strong&gt;(╯▔︵▔)╯ 购买了域名，后来在搭建过程中发现可以单纯利用Github pages就可以搭建自己的独立博客了T_T唉…..不过有个独立域名也挺好的。&lt;/p&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;p&gt;这几天因为看网易公开课&lt;a href=&quot;http://open.163.com/movie/2010/9/J/J/M7S6PN5ED_M7S94TUJJ.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;构建动态网站&lt;/a&gt;，萌生了自己搭建个独立博客的想法，搭建博客期间还是遇到了不少细节方面的问题，过程并没有想象中的那么简单。前辈们写的博客是个好东西，有不少的模板可以借鉴，但是呢还是遇到了一些坑，花了不少时间。搭建过程中发现自己和同为大学生的他们差距挺大的，还有不少要学，不过当看到自己的博客可以访问的时候心里还是挺激动的 \^o^/。&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://zccblog.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub Pages" scheme="http://zccblog.com/tags/GitHub-Pages/"/>
    
      <category term="Hexo" scheme="http://zccblog.com/tags/Hexo/"/>
    
      <category term="blog" scheme="http://zccblog.com/tags/blog/"/>
    
      <category term="静态独立博客" scheme="http://zccblog.com/tags/%E9%9D%99%E6%80%81%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
